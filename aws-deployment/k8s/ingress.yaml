apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: microservices-ingress
  namespace: microservices
  annotations:
    # AWS Load Balancer Controller配置
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    
    # 健康检查配置
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    # 标签
    alb.ingress.kubernetes.io/tags: |
      Environment=production,
      Project=spring-cloud-nacos,
      Owner=jingamz
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      # Gateway Service - 默认路由
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gateway-service
            port:
              number: 8080
      
      # 健康检查端点
      - path: /actuator/health
        pathType: Prefix
        backend:
          service:
            name: gateway-service
            port:
              number: 8080
---
# 为Nacos控制台创建单独的Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nacos-console-ingress
  namespace: nacos
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/healthcheck-path: /nacos
    alb.ingress.kubernetes.io/tags: |
      Environment=production,
      Project=spring-cloud-nacos,
      Component=nacos-console,
      Owner=jingamz
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /nacos
        pathType: Prefix
        backend:
          service:
            name: nacos-service
            port:
              number: 8848
